{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getAllRestaurants {\\n    restaurants {\\n      id\\n      name\\n      owner\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\"; // const GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\n\nvar GET_ALL_RESTAURANTS = gql(_templateObject());\n\nvar RestaurantList = function RestaurantList() {\n  _s();\n\n  var _useQuery = useQuery(GET_ALL_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Error :( \", JSON.stringify(error));\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, JSON.stringify(data === null || data === void 0 ? void 0 : data.restaurants[0].id));\n};\n\n_s(RestaurantList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx"],"names":["useQuery","gql","GET_ALL_RESTAURANTS","RestaurantList","loading","error","data","JSON","stringify","restaurants","id"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAOA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;;AACA,IAAMC,mBAAmB,GAAGD,GAAH,mBAAzB;;AAUA,IAAME,cAAkB,GAAG,SAArBA,cAAqB,GAAM;AAAA;;AAAA,kBACEH,QAAQ,CAGvCE,mBAHuC,CADV;AAAA,MACvBE,OADuB,aACvBA,OADuB;AAAA,MACdC,KADc,aACdA,KADc;AAAA,MACPC,IADO,aACPA,IADO;;AAK/B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAf,CAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeF,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEG,WAAN,CAAkB,CAAlB,EAAqBC,EAApC,CAAN,CAAP;AACD,CARD;;GAAMP,c;UAC6BH,Q;;;KAD7BG,c;AAUN,eAAeA,cAAf","sourcesContent":["import { useQuery } from \"@apollo/react-hooks\";\nimport { FC } from \"react\";\nimport {\n  GetAllRestaurantsQuery,\n  GetAllRestaurantsQueryVariables,\n} from \"../generated/types\";\n\nimport gql from \"graphql-tag\";\n\n// const GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\nconst GET_ALL_RESTAURANTS = gql`\n  query getAllRestaurants {\n    restaurants {\n      id\n      name\n      owner\n    }\n  }\n`;\n\nconst RestaurantList: FC = () => {\n  const { loading, error, data } = useQuery<\n    GetAllRestaurantsQuery,\n    GetAllRestaurantsQueryVariables\n  >(GET_ALL_RESTAURANTS);\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error :( {JSON.stringify(error)}</div>;\n  return <div>{JSON.stringify(data?.restaurants[0].id)}</div>;\n};\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}
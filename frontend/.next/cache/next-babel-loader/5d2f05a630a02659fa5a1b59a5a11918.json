{"ast":null,"code":"var _jsxFileName = \"/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { loader } from \"graphql.macro\";\nconst GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\n\nfunction RestaurantList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }, JSON.stringify(data));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx"],"names":["useQuery","loader","GET_ALL_RESTAURANTS","RestaurantList","loading","error","data","JSON","stringify"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAKA,SAASC,MAAT,QAAuB,eAAvB;AAEA,MAAMC,mBAAmB,GAAGD,MAAM,CAAC,0BAAD,CAAlC;;AAEA,SAASE,cAAT,GAA0B;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAGvCE,mBAHuC,CAAzC;AAIA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAN,CAAP;AACD;;AAED,eAAeH,cAAf","sourcesContent":["import { useQuery } from \"@apollo/react-hooks\";\nimport {\n  GetAllRestaurantsQuery,\n  GetAllRestaurantsQueryVariables,\n} from \"../generated/types\";\nimport { loader } from \"graphql.macro\";\n\nconst GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\n\nfunction RestaurantList() {\n  const { loading, error, data } = useQuery<\n    GetAllRestaurantsQuery,\n    GetAllRestaurantsQueryVariables\n  >(GET_ALL_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return <div>{JSON.stringify(data)}</div>;\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}
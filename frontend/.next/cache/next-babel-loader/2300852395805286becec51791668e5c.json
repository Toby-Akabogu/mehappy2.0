{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getAllRestaurants{\\n    restaurants {\\n      id\\n      name\\n      owner\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/react-hooks\";\n// const GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\nvar GET_ALL_RESTAURANTS = gql(_templateObject());\n\nfunction RestaurantList() {\n  _s();\n\n  var _useQuery = useQuery(GET_ALL_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, JSON.stringify(data));\n}\n\n_s(RestaurantList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx"],"names":["useQuery","GET_ALL_RESTAURANTS","gql","RestaurantList","loading","error","data","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAOA;AACA,IAAMC,mBAAmB,GAAGC,GAAH,mBAAzB;;AAUA,SAASC,cAAT,GAA0B;AAAA;;AAAA,kBACSH,QAAQ,CAGvCC,mBAHuC,CADjB;AAAA,MAChBG,OADgB,aAChBA,OADgB;AAAA,MACPC,KADO,aACPA,KADO;AAAA,MACAC,IADA,aACAA,IADA;;AAKxB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAN,CAAP;AACD;;GARQH,c;UAC0BH,Q;;;KAD1BG,c;AAUT,eAAeA,cAAf","sourcesContent":["import { useQuery } from \"@apollo/react-hooks\";\nimport {\n  GetAllRestaurantsQuery,\n  GetAllRestaurantsQueryVariables,\n} from \"../generated/types\";\nimport { loader } from \"graphql.macro\";\n\n// const GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\nconst GET_ALL_RESTAURANTS = gql`\n  query getAllRestaurants{\n    restaurants {\n      id\n      name\n      owner\n    }\n  }\n`\n\nfunction RestaurantList() {\n  const { loading, error, data } = useQuery<\n    GetAllRestaurantsQuery,\n    GetAllRestaurantsQueryVariables\n  >(GET_ALL_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return <div>{JSON.stringify(data)}</div>;\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}
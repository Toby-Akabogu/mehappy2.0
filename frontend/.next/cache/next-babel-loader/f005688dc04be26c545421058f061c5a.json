{"ast":null,"code":"var _jsxFileName = \"/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\"; // const GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\n\nconst GET_ALL_RESTAURANTS = gql`\n  query getAllRestaurants {\n    restaurants {\n      id\n      name\n      owner\n    }\n  }\n`;\n\nconst RestaurantList = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, JSON.stringify(data === null || data === void 0 ? void 0 : data.restaurants[0].id));\n};\n\nexport default RestaurantList;","map":{"version":3,"sources":["/Users/wyattqueirolo/Wyatt/mehappy/frontend/components/RestaurantList.tsx"],"names":["useQuery","gql","GET_ALL_RESTAURANTS","RestaurantList","loading","error","data","JSON","stringify","restaurants","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAOA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;;AACA,MAAMC,mBAAmB,GAAGD,GAAI;;;;;;;;CAAhC;;AAUA,MAAME,cAAkB,GAAG,MAAM;AAC/B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAGvCE,mBAHuC,CAAzC;AAIA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,IAAI,CAACC,SAAL,CAAeF,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEG,WAAN,CAAkB,CAAlB,EAAqBC,EAApC,CAAN,CAAP;AACD,CARD;;AAUA,eAAeP,cAAf","sourcesContent":["import { useQuery } from \"@apollo/react-hooks\";\nimport { FC } from \"react\";\nimport {\n  GetAllRestaurantsQuery,\n  GetAllRestaurantsQueryVariables,\n} from \"../generated/types\";\n\nimport gql from \"graphql-tag\";\n\n// const GET_ALL_RESTAURANTS = loader(\"./allRestaurants.graphql\");\nconst GET_ALL_RESTAURANTS = gql`\n  query getAllRestaurants {\n    restaurants {\n      id\n      name\n      owner\n    }\n  }\n`;\n\nconst RestaurantList: FC = () => {\n  const { loading, error, data } = useQuery<\n    GetAllRestaurantsQuery,\n    GetAllRestaurantsQueryVariables\n  >(GET_ALL_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return <div>{JSON.stringify(data?.restaurants[0].id)}</div>;\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}